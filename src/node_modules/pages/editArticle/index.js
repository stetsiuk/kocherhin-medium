import React, {useEffect, useState, useContext} from "react";
import {Navigate, useParams} from "react-router-dom";

import ArticleForm from 'components/articleForm';
import useFetch from 'hooks/useFetch';
import {CurrentUserContext} from "contexts/currentUser";


const EditArticle = () => {
    const {slug} = useParams();
    const apiUrl = `/articles/${slug}`;
    const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl);
    const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl);
    const [initialValues, setInitialValues] = useState(null);
    const [isSuccessFullSubmit, setIsSuccessFullSubmit] = useState(false);
    const [currentUserState] = useContext(CurrentUserContext);

    const onSubmit = (article) => {
        doUpdateArticle({
            method: 'put',
            data: {
                article
            }
        })
    };

    useEffect(() => {
        doFetchArticle();
    }, [doFetchArticle]);

    useEffect(() => {
        if (!fetchArticleResponse) {
            return;
        }

        setInitialValues({
            title: fetchArticleResponse.article.title,
            description: fetchArticleResponse.article.description,
            body: fetchArticleResponse.article.body,
            tagList: fetchArticleResponse.article.tagList.join(' '),
        });
    }, [fetchArticleResponse]);

    useEffect(() => {
        if (!updateArticleResponse) {
            return
        }
        setIsSuccessFullSubmit(true);
    }, [updateArticleResponse]);

    if (currentUserState.isLoggedIn === null) {
        return null
    }

    if (currentUserState.isLoggedIn === false) {
        return <Navigate to='/'/>
    }

    if (isSuccessFullSubmit) {
        const slug = updateArticleResponse.article.slug;
        return <Navigate to={`/articles/${slug}`}/>
    }

    return (
        <div>
            <ArticleForm
                onSubmit={onSubmit}
                errors={(updateArticleError && updateArticleError.errors) || {}}
                initialValues={initialValues}
            />
        </div>
    );
};

export default EditArticle;